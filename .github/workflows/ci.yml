name: Integration Test (Docker)

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  validate-action:
    name: Validate Docker Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run a test command inside the container
        uses: ./
        with:
          rust_version: '1.88.0'
          cargo_lambda_version: '1.8.5'
          command: |
            cargo lambda -V && \
            cd examples/test-compilation/ &&
            echo "Starting Compilation" &&
            cargo lambda build --release --output-format zip > /dev/null 2> out.log &&
            COMPILATION_EXIT_CODE=$? &&
            [ $COMPILATION_EXIT_CODE -eq 0 ] &&
            echo -n "# Compiled sucessfully \n<summary>Output: <details><pre>$(cat out.log)</pre></details><summary>" >> "$GITHUB_STEP_SUMMARY" ||
            echo "# Failed with error \n <pre>$(cat out.log)</pre>" >> "$GITHUB_STEP_SUMMARY" &&
            echo -n "0" > failed
      - name: Archive production artifacts
        if: false
        uses: actions/upload-artifact@v4
        with:
          name: lambda-target-zip
          path: |
            examples/test-compilation/target/lambda/test-compilation/
      - name: Echo output on ACT
        if: ${{ env.GITHUB_ACTIONS_RUNNER == 'act' }}
        run: echo "$GITHUB_STEP_SUMMARY"
      - name: Fail job if flag exists
        run: bash -c "[ -f \"$PWD/examples/test-compilation/failed\" ] && exit 1"
